{"version":3,"sources":["components/Frontpage/Frontpage.js","App.js","components/Contact/Contact.js","components/Cv/Cv.js","components/Code/Code.js","serviceWorker.js","index.js"],"names":["Frontpage","className","id","alt","src","href","props","xmlns","version","in","result","stdDeviation","mode","values","in2","React","Component","App","Contact","target","without","rel","Cv","Code","insertFields","language","style","docco","overflow","Boolean","window","location","hostname","match","routing","exact","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cb513af6.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../Frontpage/Frontpage.css'\r\nimport '../Frontpage/Frontpage.scss'\r\n\r\n\r\n\r\n\r\nclass Frontpage extends React.Component{\r\n\r\n\r\nrender(){\r\n\r\n    return (\r\n\r\n    \r\n        <div>\r\n\r\n            <div className=\"split left\" id=\"homePage\">\r\n\r\n                <div className=\"centered\">\r\n                    <img alt=\"\" className=\"iconImg\" src=\"talebobble.png\"></img>\r\n                    <img alt=\"\" className=\"welcomeImg\" src=\"pluto-done.png\"></img>\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"split right\">\r\n                <div className=\"centered\">\r\n                \r\n                    \r\n\r\n<div className=\"buttons\">\r\n<a href=\"/Code\">\r\n<button className=\"blob-btn\">\r\n   Code and Tech\r\n <span className=\"blob-btn__inner\">\r\n       <span className=\"blob-btn__blobs\">\r\n           <span className=\"blob-btn__blob\"></span>\r\n           <span className=\"blob-btn__blob\"></span>\r\n           <span className=\"blob-btn__blob\"></span>\r\n           <span className=\"blob-btn__blob\"></span>\r\n       </span>\r\n   </span>\r\n</button>\r\n</a>\r\n\r\n<a href=\"/Cv\">\r\n<button className=\"blob-btn\" props=\"value\">\r\n  CV and Experience\r\n <span className=\"blob-btn__inner\">\r\n       <span className=\"blob-btn__blobs\">\r\n           <span className=\"blob-btn__blob\"></span>\r\n           <span className=\"blob-btn__blob\"></span>\r\n           <span className=\"blob-btn__blob\"></span>\r\n           <span className=\"blob-btn__blob\"></span>\r\n       </span>\r\n   </span>\r\n</button>\r\n</a>\r\n\r\n<a href=\"/Contact\">\r\n<button className=\"blob-btn\" props=\"value\">\r\n    \r\n   Contact me\r\n <span className=\"blob-btn__inner\">\r\n       <span className=\"blob-btn__blobs\">\r\n           <span className=\"blob-btn__blob\"></span>\r\n           <span className=\"blob-btn__blob\"></span>\r\n           <span className=\"blob-btn__blob\"></span>\r\n           <span className=\"blob-btn__blob\"></span>\r\n       </span>\r\n   </span>\r\n</button>\r\n</a>\r\n\r\n\r\n\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\r\n   <defs>\r\n       <filter id=\"goo\">\r\n           <feGaussianBlur in=\"SourceGraphic\" result=\"blur\" stdDeviation=\"10\"></feGaussianBlur>\r\n           <feColorMatrix in=\"blur\" mode=\"matrix\" values=\"1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 21 -7\" result=\"goo\"></feColorMatrix>\r\n           <feBlend in2=\"goo\" in=\"SourceGraphic\" result=\"mix\"></feBlend>\r\n       </filter>\r\n   </defs>\r\n</svg>\r\n</div>\r\n\r\n          \r\n                </div>\r\n                  </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n)\r\n}\r\n}\r\nexport { Frontpage as default };","import React from 'react';\r\nimport './App.css';\r\nimport  Frontpage from './components/Frontpage/Frontpage'\r\n//TODO: clean\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Frontpage></Frontpage>\r\n  );\r\n \r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport './Contact.css';\r\n\r\nclass Contact extends React.Component {\r\n  render() {\r\n    return (\r\n      <aside className='profile-card'>\r\n        <header>\r\n          <a target='_blank' without rel=\"noopener noreferrer\" href='https://www.linkedin.com/in/daniel-gorgis-2947b0153/'>\r\n            <img\r\n              alt=\"\"\r\n              src='https://media-exp1.licdn.com/dms/image/C4D03AQEUh9sGr4FR4w/profile-displayphoto-shrink_200_200/0?e=1588204800&v=beta&t=VnQsgoZJRSX-5DHMgn59qbc6mtxjSrIlPS8cI-Sn9kY'\r\n              className='hoverZoomLink'\r\n            ></img>\r\n          </a>\r\n\r\n          <h1>Daniel Gorgis</h1>\r\n          <h3>Software Developer</h3>\r\n\r\n          \r\n          <h5> <a href=\"mailto:daniel.gorgis-cic@ibm.com\">Mail me!</a> </h5>\r\n     \r\n         \r\n          \r\n        </header>\r\n\r\n        <div className='profile-bio'></div>\r\n      </aside>\r\n    );\r\n  }\r\n}\r\nexport default Contact;\r\n","import React from 'react';\r\nimport './Cv.css';\r\nimport './Cv.scss';\r\n\r\nclass Cv extends React.Component {\r\n\r\n    \r\n\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n          \r\n        <div>\r\n\r\n<div className=\"split left\" id=\"homePage\">\r\n\r\n    <div className=\"centered\">\r\n        <img alt=\"\" className=\"iconImg\" src=\"talebobble2.png\"></img>\r\n        <img alt=\"\" className=\"welcomeImg\" src=\"downloadresume.png\"></img>\r\n\r\n\r\n    </div>\r\n</div>\r\n\r\n<div className=\"split right\">\r\n    <div className=\"centered\">\r\n\r\n\r\n<div className=\"buttons\">\r\n<a href=\"pdf.pdf\">\r\n<button className=\"blob-btn\">\r\nDownload resum√©\r\n<span className=\"blob-btn__inner\">\r\n<span className=\"blob-btn__blobs\">\r\n<span className=\"blob-btn__blob\"></span>\r\n<span className=\"blob-btn__blob\"></span>\r\n<span className=\"blob-btn__blob\"></span>\r\n<span className=\"blob-btn__blob\"></span>\r\n</span>\r\n</span>\r\n</button>\r\n</a>\r\n<a href=\"https://www.youracclaim.com/users/daniel-gorgis\">\r\n<button className=\"blob-btn\">\r\nbadges and certificates\r\n<span className=\"blob-btn__inner\">\r\n<span className=\"blob-btn__blobs\">\r\n<span className=\"blob-btn__blob\"></span>\r\n<span className=\"blob-btn__blob\"></span>\r\n<span className=\"blob-btn__blob\"></span>\r\n<span className=\"blob-btn__blob\"></span>\r\n</span>\r\n</span>\r\n</button>\r\n</a>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\r\n<defs>\r\n<filter id=\"goo\">\r\n<feGaussianBlur in=\"SourceGraphic\" result=\"blur\" stdDeviation=\"10\"></feGaussianBlur>\r\n<feColorMatrix in=\"blur\" mode=\"matrix\" values=\"1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 21 -7\" result=\"goo\"></feColorMatrix>\r\n<feBlend in2=\"goo\" in=\"SourceGraphic\" result=\"mix\"></feBlend>\r\n</filter>\r\n</defs>\r\n</svg>\r\n</div>\r\n\r\n<a href=\"https://github.com/DanielGorgis\"><img alt=\"\" className=\"fvicons\" src=\"git.png\"></img></a>\r\n\r\n\r\n\r\n\r\n    </div>\r\n      </div>\r\n        </div>\r\n\r\n  \r\n       \r\n      </div>\r\n\r\n        \r\n    );\r\n  }\r\n}\r\nexport default Cv;\r\n","import React from 'react';\r\nimport '../Code/Code.css'\r\nimport '../Code/Code.scss'\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\n\r\nclass Code extends React.Component {\r\n\r\nrender() {\r\n\r\n\r\nconst codeString = `\r\n    \r\n Code on the way..\r\n  \r\n \r\n  `;\r\n\r\n    let insertFields = (\r\n\r\n      <div>\r\n\r\n        <h3>Dette er et eksempel</h3>\r\n        <SyntaxHighlighter language=\"javascript\" style={docco}>\r\n          {codeString}\r\n        </SyntaxHighlighter>\r\n\r\n      </div>)\r\n\r\n\r\n    return (\r\n      <div>\r\n        <div style={{ overflow: 'auto' }}>\r\n\r\n          {insertFields}\r\n          {insertFields}\r\n          {insertFields}\r\n          {insertFields}\r\n          {insertFields}\r\n          \r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    )\r\n\r\n\r\n\r\n\r\n  }\r\n}\r\nexport { Code as default };","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Contact from './components/Contact/Contact';\r\nimport Cv from './components/Cv/Cv';\r\nimport Code from './components/Code/Code';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\r\n\r\n\r\nconst routing = (\r\n    <Router>\r\n      <div>\r\n        <Route exact path=\"/\" component={App} />\r\n        <Route path=\"/Contact\" component={Contact} />\r\n        <Route path=\"/Code\" component={Code} />\r\n        <Route path=\"/Cv\" component={Cv} />\r\n      </div>\r\n    </Router>\r\n  )\r\n\r\nReactDOM.render(routing, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n"],"sourceRoot":""}